class Solution {
    public List<List<Integer>> combinationSum2(int[] a, int k) {
        Arrays.sort(a);
        int n = a.length;
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        helper(0,a,k,n,ans, ds);
        return ans;
    }
    public static void helper(int idx, int[] a, int k, int n, List<List<Integer>> ans, List<Integer> ds) {
        if(k == 0){
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i = idx; i <n ; i ++) {
            if(i > idx && a[i] == a[i - 1])
                continue;
            if(a[i] > k)
                break;
            ds.add(a[i]);
            helper(i + 1,a, k - a[i], n, ans,ds);
            ds.remove(ds.size() - 1);
        }
    }
}
